// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WitcherTRPGWebApplication.Data;

namespace WitcherTRPGWebApplication.Migrations
{
    [DbContext(typeof(WitcherContext))]
    [Migration("20200301065746_intToStringSubstance")]
    partial class intToStringSubstance
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WitcherTRPGWebApplication.Interfaces.CraftingComponent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ForageDC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rarity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("CraftingComponents");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.AlchemicalItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Availability")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Effect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("AlchemicalItems");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.Ammunition", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttackType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Availability")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Concealment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DefaultReliability")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("Ammunitions");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.AmmunitionDiagram", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmmunitionID")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CraftDC")
                        .HasColumnType("int");

                    b.Property<decimal>("Investment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AmmunitionID");

                    b.ToTable("AmmunitionDiagrams");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.AmmunitionDiagramComponent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmmunitionDiagramID")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("CraftingDiagramComponentCraftingComponentID")
                        .HasColumnType("int");

                    b.Property<int?>("CraftingDiagramComponentCraftingDiagramID")
                        .HasColumnType("int");

                    b.Property<int?>("CraftingDiagramComponentID")
                        .HasColumnType("int");

                    b.Property<int?>("SubstanceID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AmmunitionDiagramID");

                    b.HasIndex("SubstanceID");

                    b.HasIndex("CraftingDiagramComponentCraftingDiagramID", "CraftingDiagramComponentCraftingComponentID");

                    b.ToTable("AmmunitionDiagramComponents");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.AmmunitionEffect", b =>
                {
                    b.Property<int>("AmmunitionID")
                        .HasColumnType("int");

                    b.Property<int>("EffectID")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AmmunitionID", "EffectID");

                    b.HasIndex("EffectID");

                    b.ToTable("AmmunitionEffects");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.Armor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Availability")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DefaultReliability")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EncumberanceValue")
                        .HasColumnType("int");

                    b.Property<int>("EnhancementSlots")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StoppingPower")
                        .HasColumnType("int");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WeightCategoryID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Armors");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.ArmorCover", b =>
                {
                    b.Property<int>("ArmorID")
                        .HasColumnType("int");

                    b.Property<int>("ArmorClassificationID")
                        .HasColumnType("int");

                    b.HasKey("ArmorID", "ArmorClassificationID");

                    b.ToTable("ArmorCovers");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.ArmorEffect", b =>
                {
                    b.Property<int>("ArmorID")
                        .HasColumnType("int");

                    b.Property<int>("EffectID")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArmorID", "EffectID");

                    b.HasIndex("EffectID");

                    b.ToTable("ArmorEffects");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.ArmorEnhancement", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Availability")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("BludgeoningResistant")
                        .HasColumnType("bit");

                    b.Property<string>("Effect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PiercingResistant")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("SlashingResistant")
                        .HasColumnType("bit");

                    b.Property<int>("StoppingPower")
                        .HasColumnType("int");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("ArmorEnhancements");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.AttackModifier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("AttackModifiers");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.Bomb", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttackType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Damage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Effect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Range")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("Bombs");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.BombFormulae", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BombID")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CraftDC")
                        .HasColumnType("int");

                    b.Property<decimal>("Investment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("BombFormulaes");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.BombFormulaeComponent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("BombDiagramID")
                        .HasColumnType("int");

                    b.Property<int?>("BombFormulaeID")
                        .HasColumnType("int");

                    b.Property<int?>("CraftingDiagramComponentCraftingComponentID")
                        .HasColumnType("int");

                    b.Property<int?>("CraftingDiagramComponentCraftingDiagramID")
                        .HasColumnType("int");

                    b.Property<int?>("CraftingDiagramComponentID")
                        .HasColumnType("int");

                    b.Property<int?>("SubstanceID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BombFormulaeID");

                    b.HasIndex("SubstanceID");

                    b.HasIndex("CraftingDiagramComponentCraftingDiagramID", "CraftingDiagramComponentCraftingComponentID");

                    b.ToTable("BombFormulaeComponents");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterAlchemicalItem", b =>
                {
                    b.Property<int>("CharacterSheetID")
                        .HasColumnType("int");

                    b.Property<int>("AlchemicalItemID")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.HasKey("CharacterSheetID", "AlchemicalItemID");

                    b.HasIndex("AlchemicalItemID");

                    b.ToTable("CharacterAlchemicalItems");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterAmmunition", b =>
                {
                    b.Property<int>("CharacterSheetID")
                        .HasColumnType("int");

                    b.Property<int>("AmmunitionID")
                        .HasColumnType("int");

                    b.Property<int?>("AmmunitionEnhancementsID")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<bool>("IsEquipped")
                        .HasColumnType("bit");

                    b.Property<int>("Reliability")
                        .HasColumnType("int");

                    b.HasKey("CharacterSheetID", "AmmunitionID");

                    b.HasIndex("AmmunitionID");

                    b.ToTable("CharacterAmmunitions");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterArmor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArmorID")
                        .HasColumnType("int");

                    b.Property<int>("CharacterSheetID")
                        .HasColumnType("int");

                    b.Property<int>("EnhancementSlotsOpen")
                        .HasColumnType("int");

                    b.Property<bool>("IsEquipped")
                        .HasColumnType("bit");

                    b.Property<int>("StoppingPower")
                        .HasColumnType("int");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("ArmorID");

                    b.HasIndex("CharacterSheetID");

                    b.ToTable("CharacterArmors");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterArmorEffect", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CharacterArmorID")
                        .HasColumnType("int");

                    b.Property<string>("EffectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EffectName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CharacterArmorID");

                    b.ToTable("CharacterArmorEffects");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterArmorEnhancement", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArmorEnhancementID")
                        .HasColumnType("int");

                    b.Property<int?>("CharacterArmorID")
                        .HasColumnType("int");

                    b.Property<int>("CharacterSheetID")
                        .HasColumnType("int");

                    b.Property<bool>("IsEquipped")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("ArmorEnhancementID");

                    b.HasIndex("CharacterArmorID");

                    b.HasIndex("CharacterSheetID");

                    b.ToTable("CharacterArmorEnhancements");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterBomb", b =>
                {
                    b.Property<int>("CharacterSheetID")
                        .HasColumnType("int");

                    b.Property<int>("BombID")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.HasKey("CharacterSheetID", "BombID");

                    b.HasIndex("BombID");

                    b.ToTable("CharacterBombs");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterCampaignNote", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CharacterSheetID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CharacterSheetID");

                    b.ToTable("CharacterCampaignNotes");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterDefiningSkill", b =>
                {
                    b.Property<int>("CharacterSheetID")
                        .HasColumnType("int");

                    b.Property<int>("DefiningSkillID")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("CharacterSheetID", "DefiningSkillID");

                    b.HasIndex("DefiningSkillID");

                    b.ToTable("CharacterDefiningSkills");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterEarlyLifeNote", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CharacterSheetID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CharacterSheetID");

                    b.ToTable("CharacterEarlyLifeNotes");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterEffect", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CharacterSheetID")
                        .HasColumnType("int");

                    b.Property<int>("CurrentDuration")
                        .HasColumnType("int");

                    b.Property<int>("CurrentValue")
                        .HasColumnType("int");

                    b.Property<int>("EffectID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CharacterSheetID");

                    b.HasIndex("EffectID");

                    b.ToTable("CharacterEffects");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterFormulae", b =>
                {
                    b.Property<int>("CharacterSheetID")
                        .HasColumnType("int");

                    b.Property<int>("FormulaeID")
                        .HasColumnType("int");

                    b.Property<bool>("RetainedByMemory")
                        .HasColumnType("bit");

                    b.HasKey("CharacterSheetID", "FormulaeID");

                    b.HasIndex("FormulaeID");

                    b.ToTable("CharacterFormulaes");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterGeneralGear", b =>
                {
                    b.Property<int>("CharacterSheetID")
                        .HasColumnType("int");

                    b.Property<int>("GeneralGearID")
                        .HasColumnType("int");

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.HasKey("CharacterSheetID", "GeneralGearID");

                    b.HasIndex("GeneralGearID");

                    b.ToTable("CharacterGeneralGears");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterGlyph", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CharacterArmorID")
                        .HasColumnType("int");

                    b.Property<int>("CharacterSheetID")
                        .HasColumnType("int");

                    b.Property<int>("GlyphID")
                        .HasColumnType("int");

                    b.Property<bool>("IsEquipped")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("CharacterArmorID");

                    b.HasIndex("CharacterSheetID");

                    b.HasIndex("GlyphID");

                    b.ToTable("CharacterGlyphs");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterHex", b =>
                {
                    b.Property<int>("CharacterSheetID")
                        .HasColumnType("int");

                    b.Property<int>("HexID")
                        .HasColumnType("int");

                    b.HasKey("CharacterSheetID", "HexID");

                    b.HasIndex("HexID");

                    b.ToTable("CharacterHexs");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterInvocation", b =>
                {
                    b.Property<int>("CharacterSheetID")
                        .HasColumnType("int");

                    b.Property<int>("InvocationID")
                        .HasColumnType("int");

                    b.HasKey("CharacterSheetID", "InvocationID");

                    b.HasIndex("InvocationID");

                    b.ToTable("CharacterInvocations");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterLifeEvent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CharacterSheetID")
                        .HasColumnType("int");

                    b.Property<int>("Decade")
                        .HasColumnType("int");

                    b.Property<string>("Event")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CharacterSheetID");

                    b.ToTable("CharacterLifeEvents");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterMountOutfit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CharacterMount_VehicleID")
                        .HasColumnType("int");

                    b.Property<int>("MountOutfitID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CharacterMount_VehicleID");

                    b.HasIndex("MountOutfitID");

                    b.ToTable("CharacterMountOutfits");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterMount_Vehicle", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CharacterSheetID")
                        .HasColumnType("int");

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<int?>("Mount_VehicleID")
                        .HasColumnType("int");

                    b.Property<int>("Mounts_VehicleID")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CharacterSheetID");

                    b.HasIndex("Mount_VehicleID");

                    b.ToTable("CharacterMount_Vehicles");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterNote", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CharacterSheetID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CharacterSheetID");

                    b.ToTable("CharacterNotes");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterRitual", b =>
                {
                    b.Property<int>("CharacterSheetID")
                        .HasColumnType("int");

                    b.Property<int>("RitualID")
                        .HasColumnType("int");

                    b.HasKey("CharacterSheetID", "RitualID");

                    b.HasIndex("RitualID");

                    b.ToTable("CharacterRituals");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterRune", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CharacterSheetID")
                        .HasColumnType("int");

                    b.Property<int?>("CharacterWeaponID")
                        .HasColumnType("int");

                    b.Property<bool>("IsEquipped")
                        .HasColumnType("bit");

                    b.Property<int>("RuneID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CharacterSheetID");

                    b.HasIndex("CharacterWeaponID");

                    b.HasIndex("RuneID");

                    b.ToTable("CharacterRunes");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterService", b =>
                {
                    b.Property<int>("CharacterSheetID")
                        .HasColumnType("int");

                    b.Property<int>("ServiceID")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.HasKey("CharacterSheetID", "ServiceID");

                    b.HasIndex("ServiceID");

                    b.ToTable("CharacterServices");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterSheet", b =>
                {
                    b.Property<int>("CharacterSheetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Affectations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Clothing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Encumbrance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FeelingsOnPeople")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HairStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ImprovementPoints")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Personality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfessionID")
                        .HasColumnType("int");

                    b.Property<int>("RaceID")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValuedPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Vigor")
                        .HasColumnType("int");

                    b.HasKey("CharacterSheetID");

                    b.HasIndex("ProfessionID");

                    b.HasIndex("RaceID");

                    b.ToTable("CharacterSheets");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterSkill", b =>
                {
                    b.Property<int>("CharacterSheetID")
                        .HasColumnType("int");

                    b.Property<int>("SkillID")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("CharacterSheetID", "SkillID");

                    b.HasIndex("SkillID");

                    b.ToTable("CharacterSkills");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterSpell", b =>
                {
                    b.Property<int>("CharacterSheetID")
                        .HasColumnType("int");

                    b.Property<int>("SpellID")
                        .HasColumnType("int");

                    b.HasKey("CharacterSheetID", "SpellID");

                    b.HasIndex("SpellID");

                    b.ToTable("CharacterSpells");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterStatistic", b =>
                {
                    b.Property<int>("CharacterSheetID")
                        .HasColumnType("int");

                    b.Property<int>("StatisticID")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("CharacterSheetID", "StatisticID");

                    b.HasIndex("StatisticID");

                    b.ToTable("CharacterStatistics");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterSubstance", b =>
                {
                    b.Property<int>("CharacterSheetID")
                        .HasColumnType("int");

                    b.Property<int>("SubstanceID")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.HasKey("CharacterSheetID", "SubstanceID");

                    b.HasIndex("SubstanceID");

                    b.ToTable("CharacterSubstances");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterToolKit", b =>
                {
                    b.Property<int>("CharacterSheetID")
                        .HasColumnType("int");

                    b.Property<int>("ToolKitID")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.HasKey("CharacterSheetID", "ToolKitID");

                    b.HasIndex("ToolKitID");

                    b.ToTable("CharacterToolKits");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterTrap", b =>
                {
                    b.Property<int>("CharacterSheetID")
                        .HasColumnType("int");

                    b.Property<int>("TrapID")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.HasKey("CharacterSheetID", "TrapID");

                    b.HasIndex("TrapID");

                    b.ToTable("CharacterTraps");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterWeapon", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CharacterSheetID")
                        .HasColumnType("int");

                    b.Property<bool>("HasAmmunition")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEquipped")
                        .HasColumnType("bit");

                    b.Property<int>("Reliability")
                        .HasColumnType("int");

                    b.Property<int?>("WeaponEnhancementsID")
                        .HasColumnType("int");

                    b.Property<int>("WeaponID")
                        .HasColumnType("int");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("CharacterSheetID");

                    b.HasIndex("WeaponID");

                    b.ToTable("CharacterWeapons");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterWeaponEffect", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CharacterArmorID")
                        .HasColumnType("int");

                    b.Property<int>("CharacterWeaponID")
                        .HasColumnType("int");

                    b.Property<string>("EffectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EffectName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CharacterArmorID");

                    b.ToTable("CharacterWeaponEffects");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterWitcherSign", b =>
                {
                    b.Property<int>("CharacterSheetID")
                        .HasColumnType("int");

                    b.Property<int>("WitcherSignID")
                        .HasColumnType("int");

                    b.HasKey("CharacterSheetID", "WitcherSignID");

                    b.HasIndex("WitcherSignID");

                    b.ToTable("CharacterWitcherSigns");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CommonCover", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StoppingPower")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("CommonCovers");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.DamageLocation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("DamageModifier")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Penalty")
                        .HasColumnType("int");

                    b.Property<string>("Roll")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("DamageLocations");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.DefiningSkill", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FollowingSkillID")
                        .HasColumnType("int");

                    b.Property<bool>("IsBaseSkill")
                        .HasColumnType("bit");

                    b.Property<int?>("PreviousSkillID")
                        .HasColumnType("int");

                    b.Property<int>("ProfessionID")
                        .HasColumnType("int");

                    b.Property<int?>("StatisticID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("FollowingSkillID");

                    b.HasIndex("PreviousSkillID");

                    b.HasIndex("ProfessionID");

                    b.HasIndex("StatisticID");

                    b.ToTable("DefiningSkills");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.Effect", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Effects");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.EffectPackage", b =>
                {
                    b.Property<int>("EffectPackageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EffectID")
                        .HasColumnType("int");

                    b.HasKey("EffectPackageID");

                    b.HasIndex("EffectID");

                    b.ToTable("EffectPackages");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.Formulae", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlchemyDC")
                        .HasColumnType("int");

                    b.Property<string>("Cost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Formulaes");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.FormulaeComponent", b =>
                {
                    b.Property<int>("FormulaeID")
                        .HasColumnType("int");

                    b.Property<int>("SubstanceID")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.HasKey("FormulaeID", "SubstanceID");

                    b.HasIndex("SubstanceID");

                    b.ToTable("FormulaeComponents");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.GeneralGear", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("GeneralGears");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.Glyph", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Effect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("Glyphs");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.Hex", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Danger")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Effect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequirementToLift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StaminaCost")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Hexs");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.Invocation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Defense")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Deity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Effect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Range")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SkillLevelID")
                        .HasColumnType("int");

                    b.Property<int>("SpellCategoryID")
                        .HasColumnType("int");

                    b.Property<int?>("StaminaCost")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Invocations");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.LightLevelModifier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Effect")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("LightLevelModifiers");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.MountOutfit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Availability")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClassificationTypeID")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Effect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("MountOutfits");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.Mount_Vehicle", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Athletics")
                        .HasColumnType("int");

                    b.Property<int>("ControlMod")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Speed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("Mount_Vehicles");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.PlacesOfPower", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Benefit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("PlacesOfPowers");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.Profession", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DefaultVigorValue")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Professions");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.ProfessionSkillPackage", b =>
                {
                    b.Property<int>("ProfessionID")
                        .HasColumnType("int");

                    b.Property<int>("SkillID")
                        .HasColumnType("int");

                    b.HasKey("ProfessionID", "SkillID");

                    b.HasIndex("SkillID");

                    b.ToTable("SkillPackages");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.Race", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RaceCategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Races");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.RacialPerk", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RaceID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("RaceID");

                    b.ToTable("RacialPerks");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.RammingSizeModifier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("RammingSizeModifiers");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.RangeAndTargetDC", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TargetDC")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("RangeAndTargetDCs");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.Ritual", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DifficultyCheck")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DifficultyTypeID")
                        .HasColumnType("int");

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Effect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreperationTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StaminaCost")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Rituals");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.RitualComponent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("ComponentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RitualID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RitualID");

                    b.ToTable("RitualComponents");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.Rune", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Effect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("Runes");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.Service", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GeneralGearID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillBase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("GeneralGearID");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.Skill", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PointsPerLevel")
                        .HasColumnType("int");

                    b.Property<int>("SkillTypeID")
                        .HasColumnType("int");

                    b.Property<int>("StatisticID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("StatisticID");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.Spell", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Defense")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Effect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Range")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SkillLevelID")
                        .HasColumnType("int");

                    b.Property<int>("SpellCategoryID")
                        .HasColumnType("int");

                    b.Property<int?>("StaminaCost")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Spells");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.Statistic", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatisticTypeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Statistics");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.Substance", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ForageDC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rarity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("Substances");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.ToolKit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Availability")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Concealment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Effect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("ToolKits");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.Trap", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Damage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Effect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Range")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("Traps");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.TrapDiagram", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CraftDC")
                        .HasColumnType("int");

                    b.Property<decimal>("Investment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrapID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TrapID");

                    b.ToTable("TrapDiagrams");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.TrapDiagramComponent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("CraftingDiagramComponentCraftingComponentID")
                        .HasColumnType("int");

                    b.Property<int?>("CraftingDiagramComponentCraftingDiagramID")
                        .HasColumnType("int");

                    b.Property<int?>("CraftingDiagramComponentID")
                        .HasColumnType("int");

                    b.Property<int?>("SubstanceID")
                        .HasColumnType("int");

                    b.Property<int>("TrapDiagramID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SubstanceID");

                    b.HasIndex("TrapDiagramID");

                    b.HasIndex("CraftingDiagramComponentCraftingDiagramID", "CraftingDiagramComponentCraftingComponentID");

                    b.ToTable("TrapDiagramComponents");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.Weapon", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttackType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Availability")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Concealment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Damage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DefaultReliability")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Enhancements")
                        .HasColumnType("int");

                    b.Property<int>("HandsRequired")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Range")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WeaponAccuracy")
                        .HasColumnType("int");

                    b.Property<int>("WeaponCategoryID")
                        .HasColumnType("int");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.WeaponEffect", b =>
                {
                    b.Property<int>("WeaponID")
                        .HasColumnType("int");

                    b.Property<int>("EffectID")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WeaponID", "EffectID");

                    b.HasIndex("EffectID");

                    b.ToTable("WeaponEffects");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.WitcherSign", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Defense")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Effect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Range")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SignClassificationID")
                        .HasColumnType("int");

                    b.Property<string>("StaminaCost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("WitcherSigns");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.ModelsHelper.CraftingDiagram", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CraftingDC")
                        .HasColumnType("int");

                    b.Property<decimal>("Investment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ObjectReferenceID")
                        .HasColumnType("int");

                    b.Property<int>("SkillLevelID")
                        .HasColumnType("int");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CraftingDiagrams");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.ModelsHelper.CraftingDiagramComponent", b =>
                {
                    b.Property<int>("CraftingDiagramID")
                        .HasColumnType("int");

                    b.Property<int>("CraftingComponentID")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.HasKey("CraftingDiagramID", "CraftingComponentID");

                    b.HasIndex("CraftingComponentID");

                    b.ToTable("CraftingDiagramComponents");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.AmmunitionDiagram", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.Ammunition", "Ammunition")
                        .WithMany()
                        .HasForeignKey("AmmunitionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.AmmunitionDiagramComponent", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.AmmunitionDiagram", "AmmunitionDiagram")
                        .WithMany()
                        .HasForeignKey("AmmunitionDiagramID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WitcherTRPGWebApplication.Models.Substance", "Substance")
                        .WithMany()
                        .HasForeignKey("SubstanceID");

                    b.HasOne("WitcherTRPGWebApplication.ModelsHelper.CraftingDiagramComponent", "CraftingDiagramComponent")
                        .WithMany()
                        .HasForeignKey("CraftingDiagramComponentCraftingDiagramID", "CraftingDiagramComponentCraftingComponentID");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.AmmunitionEffect", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.Ammunition", "Ammunition")
                        .WithMany()
                        .HasForeignKey("AmmunitionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WitcherTRPGWebApplication.Models.Effect", "Effect")
                        .WithMany()
                        .HasForeignKey("EffectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.ArmorCover", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.Armor", "Armor")
                        .WithMany()
                        .HasForeignKey("ArmorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.ArmorEffect", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.Armor", "Armor")
                        .WithMany()
                        .HasForeignKey("ArmorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WitcherTRPGWebApplication.Models.Effect", "Effect")
                        .WithMany()
                        .HasForeignKey("EffectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.BombFormulaeComponent", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.BombFormulae", "BombFormulae")
                        .WithMany()
                        .HasForeignKey("BombFormulaeID");

                    b.HasOne("WitcherTRPGWebApplication.Models.Substance", "Substance")
                        .WithMany()
                        .HasForeignKey("SubstanceID");

                    b.HasOne("WitcherTRPGWebApplication.ModelsHelper.CraftingDiagramComponent", "CraftingDiagramComponent")
                        .WithMany()
                        .HasForeignKey("CraftingDiagramComponentCraftingDiagramID", "CraftingDiagramComponentCraftingComponentID");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterAlchemicalItem", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.AlchemicalItem", "AlchemicalItem")
                        .WithMany()
                        .HasForeignKey("AlchemicalItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WitcherTRPGWebApplication.Models.CharacterSheet", "CharacterSheet")
                        .WithMany()
                        .HasForeignKey("CharacterSheetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterAmmunition", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.Ammunition", "Ammunition")
                        .WithMany()
                        .HasForeignKey("AmmunitionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WitcherTRPGWebApplication.Models.CharacterSheet", "CharacterSheet")
                        .WithMany()
                        .HasForeignKey("CharacterSheetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterArmor", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.Armor", "Armor")
                        .WithMany()
                        .HasForeignKey("ArmorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WitcherTRPGWebApplication.Models.CharacterSheet", "CharacterSheet")
                        .WithMany()
                        .HasForeignKey("CharacterSheetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterArmorEffect", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.CharacterArmor", "CharacterArmor")
                        .WithMany()
                        .HasForeignKey("CharacterArmorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterArmorEnhancement", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.ArmorEnhancement", "ArmorEnhancement")
                        .WithMany()
                        .HasForeignKey("ArmorEnhancementID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WitcherTRPGWebApplication.Models.CharacterArmor", "CharacterArmor")
                        .WithMany()
                        .HasForeignKey("CharacterArmorID");

                    b.HasOne("WitcherTRPGWebApplication.Models.CharacterSheet", "CharacterSheet")
                        .WithMany()
                        .HasForeignKey("CharacterSheetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterBomb", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.Bomb", "Bomb")
                        .WithMany()
                        .HasForeignKey("BombID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WitcherTRPGWebApplication.Models.CharacterSheet", "CharacterSheet")
                        .WithMany()
                        .HasForeignKey("CharacterSheetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterCampaignNote", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.CharacterSheet", "CharacterSheet")
                        .WithMany()
                        .HasForeignKey("CharacterSheetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterDefiningSkill", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.CharacterSheet", "CharacterSheet")
                        .WithMany()
                        .HasForeignKey("CharacterSheetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WitcherTRPGWebApplication.Models.DefiningSkill", "DefiningSkill")
                        .WithMany()
                        .HasForeignKey("DefiningSkillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterEarlyLifeNote", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.CharacterSheet", "CharacterSheet")
                        .WithMany()
                        .HasForeignKey("CharacterSheetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterEffect", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.CharacterSheet", "CharacterSheet")
                        .WithMany()
                        .HasForeignKey("CharacterSheetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WitcherTRPGWebApplication.Models.Effect", "Effect")
                        .WithMany()
                        .HasForeignKey("EffectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterFormulae", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.CharacterSheet", "CharacterSheet")
                        .WithMany()
                        .HasForeignKey("CharacterSheetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WitcherTRPGWebApplication.Models.Formulae", "Formulae")
                        .WithMany()
                        .HasForeignKey("FormulaeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterGeneralGear", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.CharacterSheet", "CharacterSheet")
                        .WithMany()
                        .HasForeignKey("CharacterSheetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WitcherTRPGWebApplication.Models.GeneralGear", "GeneralGear")
                        .WithMany()
                        .HasForeignKey("GeneralGearID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterGlyph", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.CharacterArmor", "CharacterArmor")
                        .WithMany()
                        .HasForeignKey("CharacterArmorID");

                    b.HasOne("WitcherTRPGWebApplication.Models.CharacterSheet", "CharacterSheet")
                        .WithMany()
                        .HasForeignKey("CharacterSheetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WitcherTRPGWebApplication.Models.Glyph", "Glyph")
                        .WithMany()
                        .HasForeignKey("GlyphID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterHex", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.CharacterSheet", "CharacterSheet")
                        .WithMany()
                        .HasForeignKey("CharacterSheetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WitcherTRPGWebApplication.Models.Hex", "Hex")
                        .WithMany()
                        .HasForeignKey("HexID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterInvocation", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.CharacterSheet", "CharacterSheet")
                        .WithMany()
                        .HasForeignKey("CharacterSheetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WitcherTRPGWebApplication.Models.Invocation", "Invocation")
                        .WithMany()
                        .HasForeignKey("InvocationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterLifeEvent", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.CharacterSheet", "CharacterSheet")
                        .WithMany()
                        .HasForeignKey("CharacterSheetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterMountOutfit", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.CharacterMount_Vehicle", "CharacterMount_Vehicle")
                        .WithMany()
                        .HasForeignKey("CharacterMount_VehicleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WitcherTRPGWebApplication.Models.MountOutfit", "MountOutfit")
                        .WithMany()
                        .HasForeignKey("MountOutfitID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterMount_Vehicle", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.CharacterSheet", "CharacterSheet")
                        .WithMany()
                        .HasForeignKey("CharacterSheetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WitcherTRPGWebApplication.Models.Mount_Vehicle", "Mount_Vehicle")
                        .WithMany()
                        .HasForeignKey("Mount_VehicleID");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterNote", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.CharacterSheet", "CharacterSheet")
                        .WithMany()
                        .HasForeignKey("CharacterSheetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterRitual", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.CharacterSheet", "CharacterSheet")
                        .WithMany()
                        .HasForeignKey("CharacterSheetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WitcherTRPGWebApplication.Models.Ritual", "Ritual")
                        .WithMany()
                        .HasForeignKey("RitualID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterRune", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.CharacterSheet", "CharacterSheet")
                        .WithMany()
                        .HasForeignKey("CharacterSheetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WitcherTRPGWebApplication.Models.CharacterWeapon", "CharacterWeapon")
                        .WithMany()
                        .HasForeignKey("CharacterWeaponID");

                    b.HasOne("WitcherTRPGWebApplication.Models.Rune", "Rune")
                        .WithMany()
                        .HasForeignKey("RuneID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterService", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.CharacterSheet", "CharacterSheet")
                        .WithMany()
                        .HasForeignKey("CharacterSheetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WitcherTRPGWebApplication.Models.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterSheet", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.Profession", "Profession")
                        .WithMany()
                        .HasForeignKey("ProfessionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WitcherTRPGWebApplication.Models.Race", "Race")
                        .WithMany()
                        .HasForeignKey("RaceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterSkill", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.CharacterSheet", "CharacterSheet")
                        .WithMany()
                        .HasForeignKey("CharacterSheetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WitcherTRPGWebApplication.Models.Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterSpell", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.CharacterSheet", "CharacterSheet")
                        .WithMany()
                        .HasForeignKey("CharacterSheetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WitcherTRPGWebApplication.Models.Spell", "Spell")
                        .WithMany()
                        .HasForeignKey("SpellID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterStatistic", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.CharacterSheet", "CharacterSheet")
                        .WithMany()
                        .HasForeignKey("CharacterSheetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WitcherTRPGWebApplication.Models.Statistic", "Statistic")
                        .WithMany()
                        .HasForeignKey("StatisticID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterSubstance", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.CharacterSheet", "CharacterSheet")
                        .WithMany()
                        .HasForeignKey("CharacterSheetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WitcherTRPGWebApplication.Models.Substance", "Substance")
                        .WithMany()
                        .HasForeignKey("SubstanceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterToolKit", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.CharacterSheet", "CharacterSheet")
                        .WithMany()
                        .HasForeignKey("CharacterSheetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WitcherTRPGWebApplication.Models.ToolKit", "ToolKit")
                        .WithMany()
                        .HasForeignKey("ToolKitID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterTrap", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.CharacterSheet", "CharacterSheet")
                        .WithMany()
                        .HasForeignKey("CharacterSheetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WitcherTRPGWebApplication.Models.Trap", "Trap")
                        .WithMany()
                        .HasForeignKey("TrapID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterWeapon", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.CharacterSheet", "CharacterSheet")
                        .WithMany()
                        .HasForeignKey("CharacterSheetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WitcherTRPGWebApplication.Models.Weapon", "Weapon")
                        .WithMany()
                        .HasForeignKey("WeaponID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterWeaponEffect", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.CharacterArmor", "CharacterArmor")
                        .WithMany()
                        .HasForeignKey("CharacterArmorID");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.CharacterWitcherSign", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.CharacterSheet", "CharacterSheet")
                        .WithMany()
                        .HasForeignKey("CharacterSheetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WitcherTRPGWebApplication.Models.WitcherSign", "WitcherSign")
                        .WithMany()
                        .HasForeignKey("WitcherSignID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.DefiningSkill", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.Statistic", "FollowingSkill")
                        .WithMany()
                        .HasForeignKey("FollowingSkillID");

                    b.HasOne("WitcherTRPGWebApplication.Models.Statistic", "PreviousSkill")
                        .WithMany()
                        .HasForeignKey("PreviousSkillID");

                    b.HasOne("WitcherTRPGWebApplication.Models.Profession", "Profession")
                        .WithMany()
                        .HasForeignKey("ProfessionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WitcherTRPGWebApplication.Models.Statistic", "Statistic")
                        .WithMany()
                        .HasForeignKey("StatisticID");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.EffectPackage", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.Effect", "Effect")
                        .WithMany()
                        .HasForeignKey("EffectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.FormulaeComponent", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.Formulae", "Formulae")
                        .WithMany()
                        .HasForeignKey("FormulaeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WitcherTRPGWebApplication.Models.Substance", "Substance")
                        .WithMany()
                        .HasForeignKey("SubstanceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.ProfessionSkillPackage", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.Profession", "Profession")
                        .WithMany()
                        .HasForeignKey("ProfessionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WitcherTRPGWebApplication.Models.Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.RacialPerk", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.Race", "Race")
                        .WithMany()
                        .HasForeignKey("RaceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.RitualComponent", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.Ritual", "Ritual")
                        .WithMany()
                        .HasForeignKey("RitualID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.Service", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.GeneralGear", "GeneralGear")
                        .WithMany()
                        .HasForeignKey("GeneralGearID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.Skill", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.Statistic", "Statistic")
                        .WithMany()
                        .HasForeignKey("StatisticID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.TrapDiagram", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.Trap", "Trap")
                        .WithMany()
                        .HasForeignKey("TrapID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.TrapDiagramComponent", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.Substance", "Substance")
                        .WithMany()
                        .HasForeignKey("SubstanceID");

                    b.HasOne("WitcherTRPGWebApplication.Models.TrapDiagram", "TrapDiagram")
                        .WithMany()
                        .HasForeignKey("TrapDiagramID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WitcherTRPGWebApplication.ModelsHelper.CraftingDiagramComponent", "CraftingDiagramComponent")
                        .WithMany()
                        .HasForeignKey("CraftingDiagramComponentCraftingDiagramID", "CraftingDiagramComponentCraftingComponentID");
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.Models.WeaponEffect", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Models.Effect", "Effect")
                        .WithMany()
                        .HasForeignKey("EffectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WitcherTRPGWebApplication.Models.Weapon", "Weapon")
                        .WithMany()
                        .HasForeignKey("WeaponID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WitcherTRPGWebApplication.ModelsHelper.CraftingDiagramComponent", b =>
                {
                    b.HasOne("WitcherTRPGWebApplication.Interfaces.CraftingComponent", "CraftingComponent")
                        .WithMany()
                        .HasForeignKey("CraftingComponentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WitcherTRPGWebApplication.ModelsHelper.CraftingDiagram", "CraftingDiagram")
                        .WithMany()
                        .HasForeignKey("CraftingDiagramID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
